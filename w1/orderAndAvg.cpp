#include<bits/stdc++.h>  // C++ 표준 라이브러리 모두 포함
using namespace std;

// 전역 변수 선언
int n,      // 입력받을 숫자의 개수
   temp;   // 임시로 숫자를 입력받을 변수
vector<int> v;  // 숫자들을 저장할 동적 배열(벡터)

int main() {
   // 1. 개수 입력받기
   cin >> n;  // 첫 줄에서 처리할 숫자의 개수 입력 (예: 5)
   
   // 2. 평균 계산을 위한 변수 선언 및 초기화
   double b = 0;  // 모든 숫자의 합을 저장할 변수 (실수형으로 선언)
   
   // 3. n개의 숫자를 입력받아 처리
   for(int i = 0; i < n; i++) {
       cin >> temp;     // cin이 공백을 구분자로 인식하여 숫자를 하나씩 입력 (예: 3 1 4 1 5)
       b += temp;       // 평균 계산을 위해 합계에 더함
       v.push_back(temp);  // 벡터에 숫자 추가
   }
   
   // 4. 벡터 정렬
   sort(v.begin(), v.end());  // 오름차순 정렬 (예: 1 1 3 4 5)
   
   // 5. 정렬된 숫자들 출력
   for(int i: v)       // 범위 기반 for문으로 벡터의 모든 원소 순회
       cout << i << " ";  // 각 숫자를 공백으로 구분하여 출력
   cout << "\n";       // 줄바꿈
   
   // 6. 평균값 출력
   cout << fixed           // 소수점 형식으로 출력
        << setprecision(2) // 소수점 둘째자리까지 표시
        << (b/n)          // 평균값 계산 (합계/개수)
        << "\n";          // 줄바꿈

   return 0;
}

/*
입력 과정 상세 설명:
5           -> n에 저장
3 1 4 1 5   -> 순서대로 temp에 입력되면서:
               1) b에 더해짐 (합계: 0->3->4->8->9->14)
               2) v에 추가됨 (벡터: [3]->[3,1]->[3,1,4]->[3,1,4,1]->[3,1,4,1,5])

처리 과정:
1. sort 함수로 벡터 정렬: [3,1,4,1,5] -> [1,1,3,4,5]
2. 평균 계산: 14/5 = 2.8

출력 결과:
1 1 3 4 5   -> 정렬된 벡터의 원소들
2.80        -> 평균값 (소수점 둘째자리까지)
*/